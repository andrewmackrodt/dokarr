---
x-logging:
  &default-logging
  options:
    max-size: "100k"
    max-file: "5"
  driver: json-file

services:
  #=============================================================================
  # media servers
  #=============================================================================

  plex:
    image: linuxserver/plex
    container_name: plex
    logging: *default-logging
    runtime: ${PLEX_RUNTIME:-runc}
    labels:
      - autoheal=true
      - traefik.enable=true
      - traefik.http.routers.plex.rule=HostRegexp(`${HTTP_HOST:-127.0.0.1.sslip.io}`, `{subdomain:[0-9a-f:.-]+}.sslip.io`)
      - traefik.http.services.plex.loadBalancer.server.port=32400
    environment:
      # plex
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-Europe/London}
      - VERSION=latest
      # nvidia
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,video,utility
    ports:
      - ${PLEX_PORT:-32400}:32400
    volumes:
      - ./cache/plex:/transcode
      - ./config/plex:/config
      - ./media:/media
      # Optional volumes, e.g. to follow symlinks
      - ${EXTRA_DATA_VOL_0:-/dev/null}:${EXTRA_DATA_VOL_0:-/dev/host/null0}
      - ${EXTRA_DATA_VOL_1:-/dev/null}:${EXTRA_DATA_VOL_1:-/dev/host/null1}
      - ${EXTRA_DATA_VOL_2:-/dev/null}:${EXTRA_DATA_VOL_2:-/dev/host/null2}
      - ${EXTRA_DATA_VOL_3:-/dev/null}:${EXTRA_DATA_VOL_3:-/dev/host/null3}
      - ${EXTRA_DATA_VOL_4:-/dev/null}:${EXTRA_DATA_VOL_4:-/dev/host/null4}
      - ${EXTRA_DATA_VOL_5:-/dev/null}:${EXTRA_DATA_VOL_5:-/dev/host/null5}
    healthcheck:
        test:
          - CMD
          - /bin/bash
          - -c
          - curl -fsSL -m5 http://127.0.0.1:32400/web/index.html >/dev/null && ( [[ ! -a /dev/nvidia0 ]] || nvidia-smi >/dev/null )
        interval: 10s
        timeout: 8s
        retries: 3
    restart: unless-stopped

  tautulli:
    image: linuxserver/tautulli
    container_name: tautulli
    logging: *default-logging
    labels:
      - traefik.enable=true
      - traefik.http.routers.tautulli.rule=HostRegexp(`tautulli.${HTTP_HOST:-127.0.0.1.sslip.io}`, `tautulli.{subdomain:[0-9a-f:.-]+}.sslip.io`)
      - traefik.http.services.tautulli.loadBalancer.server.port=8181
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-Europe/London}
    volumes:
      - ./config/plex/Library/Application Support/Plex Media Server/Logs:/logs
      - ./config/tautulli:/config
    restart: unless-stopped

  kavita:
    image: kizaing/kavita:nightly
    container_name: kavita
    logging: *default-logging
    user: ${PUID:-1000}:${PGID:-1000}
    labels:
      - traefik.enable=true
      - traefik.http.routers.kavita.rule=HostRegexp(`read.${HTTP_HOST:-127.0.0.1.sslip.io}`, `read.{subdomain:[0-9a-f:.-]+}.sslip.io`)
      - traefik.http.services.kavita.loadBalancer.server.port=5000
    volumes:
      - ./config/kavita:/kavita/config
      - ./media:/media
      # Optional volumes, e.g. to follow symlinks
      - ${EXTRA_DATA_VOL_0:-/dev/null}:${EXTRA_DATA_VOL_0:-/dev/host/null0}
      - ${EXTRA_DATA_VOL_1:-/dev/null}:${EXTRA_DATA_VOL_1:-/dev/host/null1}
      - ${EXTRA_DATA_VOL_2:-/dev/null}:${EXTRA_DATA_VOL_2:-/dev/host/null2}
      - ${EXTRA_DATA_VOL_3:-/dev/null}:${EXTRA_DATA_VOL_3:-/dev/host/null3}
      - ${EXTRA_DATA_VOL_4:-/dev/null}:${EXTRA_DATA_VOL_4:-/dev/host/null4}
      - ${EXTRA_DATA_VOL_5:-/dev/null}:${EXTRA_DATA_VOL_5:-/dev/host/null5}
    restart: unless-stopped

  #=============================================================================
  # media management
  #=============================================================================

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    logging: *default-logging
    labels:
      - traefik.enable=true
      - traefik.http.routers.sonarr.rule=HostRegexp(`sonarr.${HTTP_HOST:-127.0.0.1.sslip.io}`, `sonarr.{subdomain:[0-9a-f:.-]+}.sslip.io`)
      - traefik.http.services.sonarr.loadBalancer.server.port=8989
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-Europe/London}
      - XDG_CONFIG_HOME=/tmp/xdg
    volumes:
      - ./config/sonarr:/config
      - ./media:/media
      # Optional volumes, e.g. to follow symlinks
      - ${EXTRA_DATA_VOL_0:-/dev/null}:${EXTRA_DATA_VOL_0:-/dev/host/null0}
      - ${EXTRA_DATA_VOL_1:-/dev/null}:${EXTRA_DATA_VOL_1:-/dev/host/null1}
      - ${EXTRA_DATA_VOL_2:-/dev/null}:${EXTRA_DATA_VOL_2:-/dev/host/null2}
      - ${EXTRA_DATA_VOL_3:-/dev/null}:${EXTRA_DATA_VOL_3:-/dev/host/null3}
      - ${EXTRA_DATA_VOL_4:-/dev/null}:${EXTRA_DATA_VOL_4:-/dev/host/null4}
      - ${EXTRA_DATA_VOL_5:-/dev/null}:${EXTRA_DATA_VOL_5:-/dev/host/null5}
    depends_on:
      - prowlarr
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    logging: *default-logging
    labels:
      - traefik.enable=true
      - traefik.http.routers.radarr.rule=HostRegexp(`radarr.${HTTP_HOST:-127.0.0.1.sslip.io}`, `radarr.{subdomain:[0-9a-f:.-]+}.sslip.io`)
      - traefik.http.services.radarr.loadBalancer.server.port=7878
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-Europe/London}
      - XDG_CONFIG_HOME=/tmp/xdg
    volumes:
      - ./config/radarr:/config
      - ./media:/media
      # Optional volumes, e.g. to follow symlinks
      - ${EXTRA_DATA_VOL_0:-/dev/null}:${EXTRA_DATA_VOL_0:-/dev/host/null0}
      - ${EXTRA_DATA_VOL_1:-/dev/null}:${EXTRA_DATA_VOL_1:-/dev/host/null1}
      - ${EXTRA_DATA_VOL_2:-/dev/null}:${EXTRA_DATA_VOL_2:-/dev/host/null2}
      - ${EXTRA_DATA_VOL_3:-/dev/null}:${EXTRA_DATA_VOL_3:-/dev/host/null3}
      - ${EXTRA_DATA_VOL_4:-/dev/null}:${EXTRA_DATA_VOL_4:-/dev/host/null4}
      - ${EXTRA_DATA_VOL_5:-/dev/null}:${EXTRA_DATA_VOL_5:-/dev/host/null5}
    depends_on:
      - prowlarr
    restart: unless-stopped

  lidarr:
    image: linuxserver/lidarr
    container_name: lidarr
    logging: *default-logging
    labels:
      - traefik.enable=true
      - traefik.http.routers.lidarr.rule=HostRegexp(`lidarr.${HTTP_HOST:-127.0.0.1.sslip.io}`, `lidarr.{subdomain:[0-9a-f:.-]+}.sslip.io`)
      - traefik.http.services.lidarr.loadBalancer.server.port=8181
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-Europe/London}
      - XDG_CONFIG_HOME=/tmp/xdg
    volumes:
      - ./config/lidarr:/config
      - ./media:/media
      # Optional volumes, e.g. to follow symlinks
      - ${EXTRA_DATA_VOL_0:-/dev/null}:${EXTRA_DATA_VOL_0:-/dev/host/null0}
      - ${EXTRA_DATA_VOL_1:-/dev/null}:${EXTRA_DATA_VOL_1:-/dev/host/null1}
      - ${EXTRA_DATA_VOL_2:-/dev/null}:${EXTRA_DATA_VOL_2:-/dev/host/null2}
      - ${EXTRA_DATA_VOL_3:-/dev/null}:${EXTRA_DATA_VOL_3:-/dev/host/null3}
      - ${EXTRA_DATA_VOL_4:-/dev/null}:${EXTRA_DATA_VOL_4:-/dev/host/null4}
      - ${EXTRA_DATA_VOL_5:-/dev/null}:${EXTRA_DATA_VOL_5:-/dev/host/null5}
    depends_on:
      - prowlarr
    restart: unless-stopped

  readarr:
    image: ghcr.io/linuxserver/readarr:nightly
    container_name: readarr
    logging: *default-logging
    labels:
      - traefik.enable=true
      - traefik.http.routers.readarr.rule=HostRegexp(`readarr.${HTTP_HOST:-127.0.0.1.sslip.io}`, `readarr.{subdomain:[0-9a-f:.-]+}.sslip.io`)
      - traefik.http.services.readarr.loadBalancer.server.port=8787
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-Europe/London}
      - XDG_CONFIG_HOME=/tmp/xdg
    volumes:
      - ./config/readarr:/config
      - ./media:/media
      # Optional volumes, e.g. to follow symlinks
      - ${EXTRA_DATA_VOL_0:-/dev/null}:${EXTRA_DATA_VOL_0:-/dev/host/null0}
      - ${EXTRA_DATA_VOL_1:-/dev/null}:${EXTRA_DATA_VOL_1:-/dev/host/null1}
      - ${EXTRA_DATA_VOL_2:-/dev/null}:${EXTRA_DATA_VOL_2:-/dev/host/null2}
      - ${EXTRA_DATA_VOL_3:-/dev/null}:${EXTRA_DATA_VOL_3:-/dev/host/null3}
      - ${EXTRA_DATA_VOL_4:-/dev/null}:${EXTRA_DATA_VOL_4:-/dev/host/null4}
      - ${EXTRA_DATA_VOL_5:-/dev/null}:${EXTRA_DATA_VOL_5:-/dev/host/null5}
    restart: unless-stopped

  overseerr:
    image: linuxserver/overseerr
    container_name: overseerr
    logging: *default-logging
    labels:
      - traefik.enable=true
      - traefik.http.routers.overseerr.rule=HostRegexp(`requests.${HTTP_HOST:-127.0.0.1.sslip.io}`, `requests.{subdomain:[0-9a-f:.-]+}.sslip.io`)
      - traefik.http.services.overseerr.loadBalancer.server.port=5055
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-Europe/London}
    volumes:
      - ./config/overseerr:/config
    restart: unless-stopped

  #=============================================================================
  # indexer middleware
  #=============================================================================

  prowlarr:
    image: ghcr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    logging: *default-logging
    labels:
      - traefik.enable=true
      - traefik.http.routers.prowlarr.rule=HostRegexp(`prowlarr.${HTTP_HOST:-127.0.0.1.sslip.io}`, `prowlarr.{subdomain:[0-9a-f:.-]+}.sslip.io`)
      - traefik.http.services.prowlarr.loadBalancer.server.port=9696
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-Europe/London}
      - XDG_CONFIG_HOME=/tmp/xdg
    volumes:
      - ./config/prowlarr:/config
    depends_on:
      - vpn
    restart: unless-stopped

  #=============================================================================
  # download clients
  #=============================================================================

  nzbget:
    image: linuxserver/nzbget
    container_name: nzbget
    logging: *default-logging
    labels:
      - traefik.enable=true
      - traefik.http.routers.nzbget.rule=HostRegexp(`nzbget.${HTTP_HOST:-127.0.0.1.sslip.io}`, `nzbget.{subdomain:[0-9a-f:.-]+}.sslip.io`)
      - traefik.http.services.nzbget.loadBalancer.server.port=6789
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-Europe/London}
    volumes:
      - ./config/nzbget:/config
      - ./media:/media
      # Optional volumes, e.g. to follow symlinks
      - ${EXTRA_DATA_VOL_0:-/dev/null}:${EXTRA_DATA_VOL_0:-/dev/host/null0}
      - ${EXTRA_DATA_VOL_1:-/dev/null}:${EXTRA_DATA_VOL_1:-/dev/host/null1}
      - ${EXTRA_DATA_VOL_2:-/dev/null}:${EXTRA_DATA_VOL_2:-/dev/host/null2}
      - ${EXTRA_DATA_VOL_3:-/dev/null}:${EXTRA_DATA_VOL_3:-/dev/host/null3}
      - ${EXTRA_DATA_VOL_4:-/dev/null}:${EXTRA_DATA_VOL_4:-/dev/host/null4}
      - ${EXTRA_DATA_VOL_5:-/dev/null}:${EXTRA_DATA_VOL_5:-/dev/host/null5}
    restart: unless-stopped

  deluge:
    image: linuxserver/deluge
    container_name: deluge
    logging: *default-logging
    network_mode: service:vpn
    entrypoint: /usr/local/bin/init
    labels:
      - autoheal=true
      - traefik.enable=true
      - traefik.http.routers.deluge.rule=HostRegexp(`deluge.${HTTP_HOST:-127.0.0.1.sslip.io}`, `deluge.{subdomain:[0-9a-f:.-]+}.sslip.io`)
      - traefik.http.services.deluge.loadBalancer.server.port=8112
    environment:
      # deluge
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-Europe/London}
      - UMASK=002
      # vpn
      - FIREWALL_VPN_INPUT_PORTS=${FIREWALL_VPN_INPUT_PORTS}
    volumes:
      - ./config/deluge:/config
      - ./config/vpn:/gluetun:ro
      - ./media:/media
      - ./share/deluge/init:/usr/local/bin/init
      # Optional volumes, e.g. to follow symlinks
      - ${EXTRA_DATA_VOL_0:-/dev/null}:${EXTRA_DATA_VOL_0:-/dev/host/null0}
      - ${EXTRA_DATA_VOL_1:-/dev/null}:${EXTRA_DATA_VOL_1:-/dev/host/null1}
      - ${EXTRA_DATA_VOL_2:-/dev/null}:${EXTRA_DATA_VOL_2:-/dev/host/null2}
      - ${EXTRA_DATA_VOL_3:-/dev/null}:${EXTRA_DATA_VOL_3:-/dev/host/null3}
      - ${EXTRA_DATA_VOL_4:-/dev/null}:${EXTRA_DATA_VOL_4:-/dev/host/null4}
      - ${EXTRA_DATA_VOL_5:-/dev/null}:${EXTRA_DATA_VOL_5:-/dev/host/null5}
    healthcheck:
        test:
          - CMD
          - /bin/bash
          - -c
          - curl -fsSL -m5 http://127.0.0.1:8112
        interval: 10s
        timeout: 8s
        retries: 3
    depends_on:
      - vpn
    restart: unless-stopped

  #=============================================================================
  # http reverse proxy
  #=============================================================================

  traefik:
    image: traefik:latest
    container_name: traefik
    logging: *default-logging
    network_mode: host
    labels:
      - traefik.enable=${TRAEFIK_API_ENABLE:-false}
      - traefik.http.middlewares.api-auth.basicauth.users=${TRAEFIK_API_BASIC_AUTH_USERS:-}
      - traefik.http.routers.api.middlewares=${TRAEFIK_API_BASIC_AUTH_USERS:+api-auth}
      - traefik.http.routers.api.rule=HostRegexp(`traefik.${HTTP_HOST:-127.0.0.1.sslip.io}`, `traefik.{subdomain:[0-9a-f:.-]+}.sslip.io`)
      - traefik.http.routers.api.service=api@internal
      - traefik.http.services.api.loadBalancer.server.port=80 # dummy port required in host mode
    env_file:
      - ./.env
    entrypoint: /bin/sh
    command:
      - -c
      - |-
        # act as a reverse proxy for docker containers with label "traefik.enable=true"
        set -- "$$@" --providers.docker=true
        set -- "$$@" --providers.docker.exposedByDefault=false

        # enable stdout access log
        set -- "$$@" --accessLog=true

        # enable traefik dashboard
        set -- "$$@" --api.dashboard=$${TRAEFIK_API_ENABLE:-false}

        # listen addresses
        set -- "$$@" --entryPoints.web.address=:$${HTTP_PORT:-8080}
        set -- "$$@" --entryPoints.websecure.address=:$${HTTPS_PORT:-8443}

        if [ "$${CF_API_EMAIL:-}" != "" ] && [ "$${CF_API_KEY:-}" != "" ]; then
          # configure letsencrypt acme
          set -- "$$@" --certificatesResolvers.letsencrypt.acme.dnsChallenge=true
          set -- "$$@" --certificatesResolvers.letsencrypt.acme.dnsChallenge.provider=cloudflare
          set -- "$$@" --certificatesResolvers.letsencrypt.acme.email=$${LETSENCRYPT_EMAIL:-$$CF_API_EMAIL}
          set -- "$$@" --certificatesResolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json
  
          # configure letsencrypt default certificate
          set -- "$$@" --entryPoints.websecure.http.tls.certResolver=letsencrypt
          set -- "$$@" --entryPoints.websecure.http.tls.domains[0].main=$${HTTP_HOST:-127.0.0.1.sslip.io}
          set -- "$$@" --entryPoints.websecure.http.tls.domains[0].sans=*.$${HTTP_HOST:-127.0.0.1.sslip.io}

          # redirect http to https
          if [ "$${HTTPS_REDIRECT_PORT:-}" != "" ]; then
            HTTPS_ENTRYPOINT=":$$HTTPS_REDIRECT_PORT"
          else
            HTTPS_ENTRYPOINT="websecure"
          fi
          set -- "$$@" --entryPoints.web.http.redirections.entryPoint.to=$$HTTPS_ENTRYPOINT
          set -- "$$@" --entryPoints.web.http.redirections.entryPoint.scheme=https
        else
          echo 'time="'$(date -Iseconds)'" level=warn msg="CF_API_EMAIL and CF_API_KEY are not set. Continuing without letsencrypt."' >&2
          set -- "$$@" --entryPoints.websecure.http.tls=true
        fi

        # trust insecure certificates
        set -- "$$@" --serversTransport.insecureSkipVerify=true

        # opt out of usage statistics
        set -- "$$@" --global.sendAnonymousUsage=false
        
        # start traefik
        exec /entrypoint.sh "$$@"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/traefik/acme:/etc/traefik/acme
    restart: unless-stopped

  #=============================================================================
  # privacy
  #=============================================================================

  vpn:
    image: qmcgaw/gluetun
    container_name: vpn
    logging: *default-logging
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    ports:
      # http-proxy
      - 8888:8888
    environment:
      # mullvad
      - CITY=${MULLVAD_CITY:-London}
      - FIREWALL_VPN_INPUT_PORTS=${FIREWALL_VPN_INPUT_PORTS}
      - HTTPPROXY=on
      - VPN_TYPE=wireguard
      - VPNSP=mullvad
      - WIREGUARD_ADDRESS=${WIREGUARD_ADDRESS:-10.64.222.21/32}
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
    volumes:
      - ./config/vpn:/gluetun
    restart: unless-stopped

  #=============================================================================
  # container management
  #=============================================================================

  autoheal:
    image: willfarrell/autoheal
    container_name: autoheal
    logging: *default-logging
    security_opt:
      - no-new-privileges
    environment:
      - AUTOHEAL_CONTAINER_LABEL=autoheal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped

  portainer:
    image: ${PORTAINER_IMAGE:-portainer/portainer-ce}
    container_name: portainer
    logging: *default-logging
    labels:
      - traefik.enable=true
      - traefik.http.routers.portainer.rule=HostRegexp(`portainer.${HTTP_HOST:-127.0.0.1.sslip.io}`, `portainer.{subdomain:[0-9a-f:.-]+}.sslip.io`)
      - traefik.http.services.portainer.loadBalancer.server.port=9000
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-Europe/London}
      - VERSION=docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/portainer:/data
    restart: unless-stopped
