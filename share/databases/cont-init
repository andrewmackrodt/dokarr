#!/usr/bin/with-contenv bash

DATABASE_PATH="${DATABASE_PATH:-/config}"
FILESYSTEM=$(df "$DATABASE_PATH" | tail -n1 | awk '{ print $1 }')
TYPE=$(mount | awk '$1 == "'$FILESYSTEM'" { print $5 }' | tail -n1)
PUID=${PUID:-1000}

if [[ "${DATABASE_FILES}" == "" ]] \
        || [[ "${TYPE}" != "cifs" ]] \
        && [[ "${TYPE}" != "nfs" ]]; then
    exit 0
fi

if [[ ! -d /databases ]]; then
    echo -e "\033[0;31mERROR: Volume not found: /databases\033[0;0m" >&2
    exit 1
fi

if [[ ! -d "$DATABASE_PATH" ]]; then
    mkdir -p "$DATABASE_PATH"
    chown $PUID:$PUID "$DATABASE_PATH"
fi

for file in $DATABASE_FILES; do
    database="$DATABASE_PATH/$file.db"
    wal="$DATABASE_PATH/$file.db-wal"
    shm="$DATABASE_PATH/$file.db-shm"

    # remove symlinks from previous runs
    [[ -L "$database" ]] && rm "$database"
    [[ -L "$wal" ]] && rm "$wal"
    [[ -L "$shm" ]] && rm "$shm"

    databaseVol="/databases/$file.db"
    walVol="/databases/$file.db-wal"
    shmVol="/databases/$file.db-shm"

    if [[ -s "$database" ]] || [[ -s "$databaseVol" ]]; then
        # remove backup files if database is not empty, this should be
        # handled by cont-finish but if we're switching OS then these
        # files may still exist

        rm -f "$database~" "$wal~" "$shm~" 2>/dev/null
    fi

    if [[ ! -s "$database" ]]; then
        # remove stale wal files, they don't have use without a database
        # to use with and should not exist under normal circumstances

        rm -f "$wal" "$shm" 2>/dev/null

        # attempt recovery using files in the volume or by renaming
        # backup files if they exist

        if [[ -s "$databaseVol" ]]; then
            # volume recovery

            cp -f "$databaseVol" "$database"
            [[ -f "$walVol" ]] && cp -f "$walVol" "$wal"
            [[ -f "$shmVol" ]] && cp -f "$shmVol" "$shm"
        elif [[ -s "$database~" ]]; then
            # backup recovery

            mv "$database~" "$database"
            [[ -f "$wal~" ]] && mv -f "$wal~" "$wal"
            [[ -f "$shm~" ]] && mv -f "$shm~" "$shm"
        fi
    fi

    # files in the volume are no longer required, delete them
    rm -f "$databaseVol" "$walVol" "$shmVol" 2>/dev/null

    # if we still don't have a database then we cannot proceed with
    # using the volume as the app will panic with a corrupt database
    # error, it will be mounted the next time the container is run

    if [[ ! -s "$database" ]]; then
        echo "ERR: $database does not exist, cannot use volume mount" >&2

        continue
    fi

    # move or create files so we can create symlinks later
    [[ -f "$database" ]] && mv -f "$database" "$database~" || touch "$database~"
    [[ -f "$wal" ]] && mv -f "$wal" "$wal~" || touch "$wal~"
    [[ -f "$shm" ]] && mv -f "$shm" "$shm~" || touch "$shm~"

    # copy files to the volume
    cp -f "$database~" "$databaseVol"
    cp -f "$wal~" "$walVol"
    cp -f "$shm~" "$shmVol"

    # make files in volume writeable
    chown $PUID:$PUID "$databaseVol" "$walVol" "$shmVol"
    chmod 0666 "$databaseVol" "$walVol" "$shmVol"

    # create symlinks
    ln -fns "$databaseVol" "$database"
    ln -fns "$walVol" "$wal"
    ln -fns "$shmVol" "$shm"

    chown -h $PUID:$PUID "$database" "$wal" "$shm"
done
