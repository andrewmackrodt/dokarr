#!/bin/bash
set -o pipefail

OWD=$PWD
cd /config

# wait for vpn interface creation
echo -n "Waiting for vpn to become available .." >&2
while [[ ! -L /sys/class/net/tun0 ]] && [[ ! -L /sys/class/net/wg0 ]]; do
    echo -n "." >&2
    sleep 1
done
echo " OK" >&2

# create initial config files
for dist in $(ls *.conf-dist); do
    conf="${dist:0:${#dist}-5}"
    if [[ ! -f "$conf" ]]; then
        cp "$dist" "$conf"
    fi
done

echo "Detected remote ip address: $(curl -s https://api.ipify.org)" >&2

# request pia port forwarding
echo -n "Detecting forwarded port .. " >&2
if [[ "${FIREWALL_VPN_INPUT_PORTS:-}" == "" ]] && [[ -f /gluetun/forwarded_port ]]; then
    FIREWALL_VPN_INPUT_PORTS=$(grep -E '[0-9]+' /gluetun/forwarded_port)
fi
if [[ "${FIREWALL_VPN_INPUT_PORTS:-}" != "" ]]; then
    echo "$FIREWALL_VPN_INPUT_PORTS" >&2
    echo "Updating deluge config to use port: $FIREWALL_VPN_INPUT_PORTS" >&2
    cp -f core.conf core.conf~
    if ! cat core.conf~ \
        | perl -0777 -pe 's/"listen_ports":.+?\]/"listen_ports": [\n        '"$FIREWALL_VPN_INPUT_PORTS"',\n        '"$FIREWALL_VPN_INPUT_PORTS"'\n    ]/ms' \
        | tee core.conf >/dev/null \
    ; then
        mv core.conf~ core.conf
    fi
else
    echo "ERR" >&2
fi

# create plugins directory
if [[ ! -d plugins ]]; then
  mkdir plugins
fi
cd plugins

# download ltConfig
if [[ ! -f ltConfig-*.egg ]]; then
    echo -n "Downloading ltConfig .. " >&2
    PLUGIN_URL=$(curl -sSL https://api.github.com/repos/ratanakvlun/deluge-ltconfig/releases/latest \
        | grep 'browser_download_url' \
        | cut -d '"' -f4)
    PLUGIN_FILE=$(basename "$PLUGIN_URL")
    if curl -fsSL --output "$PLUGIN_FILE" "$PLUGIN_URL"; then
      echo "OK" >&2
    else
      echo "ERR" >&2
    fi
fi

# start deluge
cd "$OWD"
exec /init
